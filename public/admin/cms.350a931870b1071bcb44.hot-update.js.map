{"version":3,"file":"cms.350a931870b1071bcb44.hot-update.js","sources":["webpack:///./src/components/Accordion.js"],"sourcesContent":["import React from 'react'\nimport ChevronDown from 'react-feather/dist/icons/chevron-down'\nimport _kebabCase from 'lodash/kebabCase'\nimport './Accordion.css'\n\nexport default class Accordion extends React.Component {\n  static defaultProps = {\n    items: [],\n    className: ''\n  }\n\n  // use state to auto close but has issues mobile view. onClick={() => this.handleClick(index)}\n  // state = {\n  //   activeItem: null\n  // }\n  //\n  // handleClick = index => {\n  //   this.setState({\n  //     activeItem: this.state.activeItem === index ? null : index\n  //   })\n  // }\n\n  toggleAccordion(e) {\n    e.target.classList.toggle('active')\n  }\n\n  handleKeyDown = ev => {\n    if (ev.keyCode === 13 && !ev.target.classList.contains('active')) {\n      // enter to open\n      this.toggleAccordion(ev)\n    } else if (ev.keyCode === 27 && ev.target.classList.contains('active')) {\n      // escape to close\n      this.toggleAccordion(ev)\n    }\n  }\n\n  render() {\n    const { items, className } = this.props\n    return (\n      <div className={`Accordion ${className}`}>\n        {!!items &&\n          items.map((item, index) => (\n            <div\n              className={`Accordion--item `}\n              key={`accordion-item-${_kebabCase(item.title) + '-' + index}`}\n              onClick={this.toggleAccordion.bind(this)}\n              onKeyDown={this.handleKeyDown}\n              tabIndex={0}\n              aria-label=\"Toggle Accordion\"\n              role=\"button\"\n            >\n              <h2 className=\"flex\">\n                <span>{item.title}</span>\n                <ChevronDown />\n              </h2>\n              <div className={'description'}>\n                <b>Hi{item.boldStatement}</b>\n                {item.description} <br />\n                {item.link && (\n                  <div href={item.link} className=\"button\">\n                    {item.linkTitle}\n                  </div>\n                )}\n              </div>\n            </div>\n          ))}\n      </div>\n    )\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAWA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBA;AA2BA;AACA;;;;;;;;AAhEA;AACA;AADA;AAEA;AACA;AAFA;AADA;;;;;;;;;;AAAA;;;;;;;;;;;;;A","sourceRoot":""}